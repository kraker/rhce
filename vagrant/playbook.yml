---
# RHCE Lab Provisioning Playbook
# Sets up complete Ansible environment for RHCE practice

- name: Configure all hosts for RHCE lab
  hosts: all
  become: yes
  tasks:
    - name: Update all packages
      dnf:
        name: '*'
        state: latest
        
    - name: Install essential packages
      dnf:
        name:
          - vim
          - wget
          - curl
          - tree
          - git
          - bash-completion
          - python3-pip
        state: present
        
    - name: Create ansible user
      user:
        name: ansible
        comment: "Ansible automation user"
        shell: /bin/bash
        create_home: yes
        groups: wheel
        append: yes
        
    - name: Set up passwordless sudo for ansible user
      copy:
        content: "ansible ALL=(ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/ansible
        mode: '0440'
        
    - name: Configure /etc/hosts for all lab VMs
      blockinfile:
        path: /etc/hosts
        block: |
          # RHCE Lab VMs
          192.168.4.200 control.example.com control
          192.168.4.201 ansible1.example.com ansible1
          192.168.4.202 ansible2.example.com ansible2
          192.168.4.203 ansible3.example.com ansible3
          192.168.4.204 ansible4.example.com ansible4
        marker: "# {mark} RHCE LAB HOSTS"
        
    - name: Configure firewall for SSH
      firewalld:
        service: ssh
        permanent: yes
        state: enabled
        immediate: yes
        
    - name: Deploy custom MOTD
      template:
        src: files/motd
        dest: /etc/motd
        owner: root
        group: root
        mode: '0644'

- name: Configure control node specific settings
  hosts: control
  become: yes
  tasks:
    - name: Install Ansible on control node
      dnf:
        name: ansible-core
        state: present
        
    - name: Install additional Ansible collections
      command: ansible-galaxy collection install {{ item }}
      loop:
        - community.general
        - ansible.posix
      become_user: ansible
      
    - name: Create SSH key for ansible user
      user:
        name: ansible
        generate_ssh_key: yes
        ssh_key_type: rsa
        ssh_key_bits: 2048
        ssh_key_file: .ssh/id_rsa
        
    - name: Create Ansible project directories
      file:
        path: "{{ item }}"
        state: directory
        owner: ansible
        group: ansible
        mode: '0755'
      loop:
        - /home/ansible/projects
        - /home/ansible/projects/webservers
        - /home/ansible/projects/databases
        - /home/ansible/projects/practice
        
    - name: Deploy ansible.cfg to control node
      copy:
        content: |
          [defaults]
          inventory = inventory
          remote_user = ansible
          host_key_checking = False
          retry_files_enabled = False
          stdout_callback = yaml
          
          [inventory]
          enable_plugins = host_list, script, auto, yaml, ini, toml
          
          [privilege_escalation]
          become = True
          become_method = sudo
          become_user = root
          become_ask_pass = False
        dest: /home/ansible/.ansible.cfg
        owner: ansible
        group: ansible
        mode: '0644'
        
    - name: Deploy default inventory to control node
      copy:
        content: |
          [control]
          control.example.com
          
          [managed]
          ansible1.example.com
          ansible2.example.com
          ansible3.example.com
          ansible4.example.com
          
          [webservers]
          ansible1.example.com
          ansible2.example.com
          
          [databases]
          ansible3.example.com
          
          [development]
          ansible4.example.com
          
          [production]
          ansible1.example.com
          ansible2.example.com
          ansible3.example.com
          
          [all:vars]
          ansible_user=ansible
        dest: /home/ansible/inventory
        owner: ansible
        group: ansible
        mode: '0644'

- name: Configure managed nodes
  hosts: managed
  become: yes
  tasks:
    - name: Install Python packages for Ansible modules
      dnf:
        name:
          - python3-dnf
          - python3-firewall
        state: present
        
    - name: Create .ssh directory for ansible user
      file:
        path: /home/ansible/.ssh
        state: directory
        owner: ansible
        group: ansible
        mode: '0700'

- name: Set up SSH key distribution
  hosts: control
  become: yes
  tasks:
    - name: Fetch public key from control node
      fetch:
        src: /home/ansible/.ssh/id_rsa.pub
        dest: /tmp/ansible_public_key
        flat: yes
      run_once: yes

- name: Distribute SSH keys to managed nodes
  hosts: managed
  become: yes
  tasks:
    - name: Copy public key to managed nodes
      authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', '/tmp/ansible_public_key') }}"
        
- name: Test Ansible connectivity
  hosts: control
  become: yes
  become_user: ansible
  tasks:
    - name: Test connectivity to all managed nodes
      command: ansible all -m ping
      register: connectivity_test
      ignore_errors: yes
      
    - name: Display connectivity test results
      debug:
        var: connectivity_test.stdout_lines
        
- name: Configure web server group
  hosts: webservers
  become: yes
  tasks:
    - name: Install Apache HTTP Server
      dnf:
        name: httpd
        state: present
        
    - name: Configure firewall for HTTP
      firewalld:
        service: http
        permanent: yes
        state: enabled
        immediate: yes

- name: Configure database server
  hosts: databases
  become: yes
  tasks:
    - name: Install MariaDB
      dnf:
        name:
          - mariadb-server
          - python3-PyMySQL
        state: present
        
    - name: Configure firewall for MySQL
      firewalld:
        service: mysql
        permanent: yes
        state: enabled
        immediate: yes